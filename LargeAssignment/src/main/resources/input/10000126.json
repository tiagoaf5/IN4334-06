{"type":"StackOverflowArtifact","question":{"type":"StackOverflowQuestion","id":10000126,"title":"Re-using Java generic collections in Scala without trait Object","comments":[{"type":"StackOverflowComment","id":12782408,"postId":10000126,"creationDate":"2012-04-03","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":869736,"displayName":"Louis Wasserman","reputation":87561},"informationUnits":[{"type":"NaturalLanguageTaggedUnit","id":"10000126-c12782408-u0","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"TextFragmentNode","text":"This looks a lot like a type erasure thing caused by using generic arrays in the first place?"}]},"rawText":"This looks a lot like a type erasure thing caused by using generic arrays in the first place?","source":{"type":"XmlSourceInfo","node":{"type":"XmlTextNode","contents":"This looks a lot like a type erasure thing caused by using generic arrays in the first place?"}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"erasur":1,"thing":1,"generic":1,"array":1,"caus":1,"lot":1,"place":1,"type":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"type":"CodeIdentifiersMetaInformation","identifiers":[]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[]},{"type":"TextReadabilityMetaInformation","fleshReadingEaseScore":85.165,"fleshKincaidGradeLevel":5.852222222222224,"automatedReadingIndex":7.195,"gunningFogIndex":7.2,"smogIndex":3.0,"colemanLiauIndex":7.074999999999999}]}]},{"type":"StackOverflowComment","id":12783562,"postId":10000126,"creationDate":"2012-04-03","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":195489,"displayName":"Nikolaos","reputation":827},"informationUnits":[{"type":"NaturalLanguageTaggedUnit","id":"10000126-c12783562-u0","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"TextFragmentNode","text":"@dave: yes, edited"}]},"rawText":"@dave: yes, edited","source":{"type":"XmlSourceInfo","node":{"type":"XmlTextNode","contents":"@dave: yes, edited"}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"dave":1,"edit":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"type":"CodeIdentifiersMetaInformation","identifiers":[]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[]},{"type":"TextReadabilityMetaInformation","fleshReadingEaseScore":90.99000000000002,"fleshKincaidGradeLevel":1.3133333333333361,"automatedReadingIndex":2.0500000000000007,"gunningFogIndex":1.2000000000000002,"smogIndex":3.0,"colemanLiauIndex":1.6866666666666639}]}]},{"type":"StackOverflowComment","id":12783505,"postId":10000126,"creationDate":"2012-04-03","score":0,"isEdited":false,"owner":{"type":"StackOverflowUser","id":115478,"displayName":"dave","reputation":10754},"informationUnits":[{"type":"NaturalLanguageTaggedUnit","id":"10000126-c12783505-u0","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"TextFragmentNode","text":"I think you meant `"},{"type":"ExpressionStatement","expression":{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"x","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"test","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"array","comments":[]}],"comments":[]}],"comments":[]},"comments":[]},"labels":[]},{"type":"TextFragmentNode","text":"`, right?"}]},"rawText":"I think you meant `x.test(array)`, right?","source":{"type":"XmlSourceInfo","node":{"type":"XmlTextNode","contents":"I think you meant `x.test(array)`, right?"}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"meant":1,"array":1,"test":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"x","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"test","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"array","comments":[]}],"comments":[]}],"comments":[]},"comments":[]}]},{"type":"CodeVariablesMetaInformation","variables":[]},{"type":"CodeIdentifiersMetaInformation","identifiers":[{"type":"IdentifierNode","name":"x","comments":[]},{"type":"IdentifierNode","name":"test","comments":[]},{"type":"IdentifierNode","name":"array","comments":[]}]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[]},{"type":"TextReadabilityMetaInformation","fleshReadingEaseScore":78.87285714285716,"fleshKincaidGradeLevel":3.997142857142858,"automatedReadingIndex":2.2557142857142836,"gunningFogIndex":2.8000000000000003,"smogIndex":3.0,"colemanLiauIndex":5.157142857142855}]}]}],"tags":["java","scala","generics","collections","trait"],"creationDate":"2012-04-03","lastActivityDate":"2012-04-03","lastEditDate":"2012-04-03","score":1,"viewCount":161,"owner":{"type":"StackOverflowUser","id":195489,"displayName":"Nikolaos","reputation":827},"informationUnits":[{"type":"NaturalLanguageTaggedUnit","id":"10000126-u0","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"TextFragmentNode","text":"I'm trying to re-use a Java generic collection I wrote, looks a lot like this:"}]},"rawText":"I'm trying to re-use a Java generic collection I wrote, looks a lot like this:","source":{"type":"XmlSourceInfo","node":{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"p"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"I'm trying to re-use a Java generic collection I wrote, looks a lot like this:"}]}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"collect":1,"generic":1,"wrote":1,"lot":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"type":"CodeIdentifiersMetaInformation","identifiers":[]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[]},{"type":"TextReadabilityMetaInformation","fleshReadingEaseScore":74.27000000000001,"fleshKincaidGradeLevel":6.8750000000000036,"automatedReadingIndex":4.821249999999999,"gunningFogIndex":6.4,"smogIndex":3.0,"colemanLiauIndex":5.14875}]},{"type":"CodeTaggedUnit","id":"10000126-u1","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"ClassDeclarationNode","modifiers":[{"type":"KeywordModifierNode","value":"public","comments":[]}],"identifier":{"type":"IdentifierNode","name":"Blah","comments":[]},"typeParameters":{"type":"TypeParametersNode","typeParameters":[{"type":"TypeParameterNode","identifier":{"type":"IdentifierNode","name":"T","comments":[]},"comments":[]}],"comments":[]},"implementedInterfaces":{"type":"TypeListNode","types":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"List","comments":[]},"typeArguments":{"type":"TypeArgumentsNode","types":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"T","comments":[]},"comments":[]}],"comments":[]}],"comments":[]},"comments":[]}],"comments":[]}],"comments":[]},"labels":[],"comments":[]},{"type":"TextFragmentNode","text":"{\n...\n   "},{"type":"MethodDeclaratorNode","modifiers":[{"type":"KeywordModifierNode","value":"public","comments":[]}],"returnType":{"type":"PrimitiveTypeNode","name":"void","comments":[]},"identifier":{"type":"IdentifierNode","name":"test","comments":[]},"parameters":{"type":"FormalParametersNode","parameters":{"type":"FormalParameterDeclsNode","formalParameters":[{"type":"FormalParameterDeclNode","modifiers":[],"parameterType":{"type":"ArrayTypeNode","typeNode":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"T","comments":[]},"comments":[]}],"comments":[]},"depth":[{"type":"ArrayDimensionNode","comments":[]}]},"variableDeclarator":{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"array","comments":[]},"arrayDepth":[]},"isVariadic":false,"comments":[]}],"comments":[]},"comments":[]},"arrayReturnType":[],"comments":[]},{"type":"TextFragmentNode","text":"{\n   ...\n   }\n...\n}\n"}]},"rawText":"public class Blah<T>\n   implements List<T>\n{\n...\n   public void test(T[] array) {\n   ...\n   }\n...\n}\n","source":{"type":"XmlSourceInfo","node":{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"pre"},"attributes":[],"elements":[{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"public class Blah<T>\n   implements List<T>\n{\n...\n   public void test(T[] array) {\n   ...\n   }\n...\n}\n"}]}]}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"blah":1,"list":1,"array":1,"test":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"List","comments":[]},"typeArguments":{"type":"TypeArgumentsNode","types":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"T","comments":[]},"comments":[]}],"comments":[]}],"comments":[]},"comments":[]}],"comments":[]},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"T","comments":[]},"comments":[]}],"comments":[]},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"T","comments":[]},"comments":[]}],"comments":[]}],"basicTypes":[{"type":"PrimitiveTypeNode","name":"void","comments":[]}]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"array","comments":[]},"arrayDepth":[]}]},{"type":"CodeIdentifiersMetaInformation","identifiers":[{"type":"IdentifierNode","name":"Blah","comments":[]},{"type":"IdentifierNode","name":"T","comments":[]},{"type":"IdentifierNode","name":"List","comments":[]},{"type":"IdentifierNode","name":"T","comments":[]},{"type":"IdentifierNode","name":"test","comments":[]},{"type":"IdentifierNode","name":"T","comments":[]},{"type":"IdentifierNode","name":"array","comments":[]}]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[{"type":"MethodDeclaratorNode","modifiers":[{"type":"KeywordModifierNode","value":"public","comments":[]}],"returnType":{"type":"PrimitiveTypeNode","name":"void","comments":[]},"identifier":{"type":"IdentifierNode","name":"test","comments":[]},"parameters":{"type":"FormalParametersNode","parameters":{"type":"FormalParameterDeclsNode","formalParameters":[{"type":"FormalParameterDeclNode","modifiers":[],"parameterType":{"type":"ArrayTypeNode","typeNode":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"T","comments":[]},"comments":[]}],"comments":[]},"depth":[{"type":"ArrayDimensionNode","comments":[]}]},"variableDeclarator":{"type":"VariableDeclaratorNode","identifier":{"type":"IdentifierNode","name":"array","comments":[]},"arrayDepth":[]},"isVariadic":false,"comments":[]}],"comments":[]},"comments":[]},"arrayReturnType":[],"comments":[]}]}]},{"type":"NaturalLanguageTaggedUnit","id":"10000126-u2","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"TextFragmentNode","text":"When consumed from a Scala generic collection that uses the above, I'm getting a compilation error, where I notice that the Blah class method expects not T, but T with "},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"java","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"lang","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Object","comments":[]},"comments":[]}],"comments":[]},{"type":"TextFragmentNode","text":"!"}]},"rawText":"When consumed from a Scala generic collection that uses the above, I'm getting a compilation error, where I notice that the Blah class method expects not T, but T with java.lang.Object!","source":{"type":"XmlSourceInfo","node":{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"p"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"When consumed from a Scala generic collection that uses the above, I'm getting a compilation error, where I notice that the Blah class method expects not T, but T with java.lang.Object!"}]}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"consum":1,"method":1,"blah":1,"object":1,"generic":1,"error":1,"expect":1,"scala":1,"notic":1,"compil":1,"collect":1,"lang":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"java","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"lang","comments":[]},"comments":[]},{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Object","comments":[]},"comments":[]}],"comments":[]}],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"type":"CodeIdentifiersMetaInformation","identifiers":[{"type":"IdentifierNode","name":"java","comments":[]},{"type":"IdentifierNode","name":"lang","comments":[]},{"type":"IdentifierNode","name":"Object","comments":[]}]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[]},{"type":"TextReadabilityMetaInformation","fleshReadingEaseScore":44.81125000000003,"fleshKincaidGradeLevel":14.958750000000002,"automatedReadingIndex":16.7953125,"gunningFogIndex":15.3,"smogIndex":10.745966692414834,"colemanLiauIndex":11.055937499999999}]},{"type":"CodeTaggedUnit","id":"10000126-u3","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"TextFragmentNode","text":"Object "},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"MyStaticObject","comments":[]},"comments":[]}],"comments":[]},{"type":"TextFragmentNode","text":"{\n   def test[T](array: Array[T]) = { \n      val x = "},{"type":"ExpressionStatement","expression":{"type":"ArrayExpressionCreatorNode","creatorType":{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Blah","comments":[]},"comments":[]}],"comments":[]},"expressionDepth":[{"type":"DimExpressionNode","argument":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"T","comments":[]}],"comments":[]},"comments":[]}],"arrayDepth":[],"comments":[]},"labels":[]},{"type":"TextFragmentNode","text":"();\n      "},{"type":"ExpressionStatement","expression":{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"x","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"test","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"array","comments":[]}],"comments":[]}],"comments":[{"text":"// <- error here: Overloaded method with alternatives test[T with java.lang.Object] ... cannot be applied\n"}]},"comments":[]},"labels":[]},{"type":"TextFragmentNode","text":"}\n"}]},"rawText":"Object MyStaticObject {\n   def test[T](array: Array[T]) = { \n      val x = new Blah[T]();\n      x.test(array) // <- error here: Overloaded method with alternatives test[T with java.lang.Object] ... cannot be applied\n}\n","source":{"type":"XmlSourceInfo","node":{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"pre"},"attributes":[],"elements":[{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"Object MyStaticObject {\n   def test[T](array: Array[T]) = { \n      val x = new Blah[T]();\n      x.test(array) // <- error here: Overloaded method with alternatives test[T with java.lang.Object] ... cannot be applied\n}\n"}]}]}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"method":1,"test":3,"overload":1,"altern":1,"blah":1,"object":3,"array":3,"error":1,"def":1,"lang":1,"appli":1,"val":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"MyStaticObject","comments":[]},"comments":[]}],"comments":[]},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Blah","comments":[]},"comments":[]}],"comments":[]}],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[{"type":"MethodInvocationNode","qualifiedIdentifier":{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"x","comments":[]}],"comments":[]},"identifier":{"type":"IdentifierNode","name":"test","comments":[]},"args":{"type":"ExpressionListNode","arguments":[{"type":"QualifiedIdentifierNode","identifiers":[{"type":"IdentifierNode","name":"array","comments":[]}],"comments":[]}],"comments":[{"text":"// <- error here: Overloaded method with alternatives test[T with java.lang.Object] ... cannot be applied\n"}]},"comments":[]}]},{"type":"CodeVariablesMetaInformation","variables":[]},{"type":"CodeIdentifiersMetaInformation","identifiers":[{"type":"IdentifierNode","name":"MyStaticObject","comments":[]},{"type":"IdentifierNode","name":"Blah","comments":[]},{"type":"IdentifierNode","name":"T","comments":[]},{"type":"IdentifierNode","name":"x","comments":[]},{"type":"IdentifierNode","name":"test","comments":[]},{"type":"IdentifierNode","name":"array","comments":[]}]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[]}]},{"type":"NaturalLanguageTaggedUnit","id":"10000126-u4","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"TextFragmentNode","text":"Is there a way to avoid this situation without re-writing the Blah class in Scala? (That works, but I have too much such Java code and rather not port the whole thing...)"}]},"rawText":"Is there a way to avoid this situation without re-writing the Blah class in Scala? (That works, but I have too much such Java code and rather not port the whole thing...)","source":{"type":"XmlSourceInfo","node":{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"p"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"Is there a way to avoid this situation without re-writing the Blah class in Scala? (That works, but I have too much such Java code and rather not port the whole thing...)"}]}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"thing":1,"blah":1,"avoid":1,"work":1,"code":1,"situat":1,"port":1,"scala":1,"write":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"type":"CodeIdentifiersMetaInformation","identifiers":[]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[]},{"type":"TextReadabilityMetaInformation","fleshReadingEaseScore":82.20125,"fleshKincaidGradeLevel":5.768750000000001,"automatedReadingIndex":5.998750000000001,"gunningFogIndex":7.65,"smogIndex":6.872983346207417,"colemanLiauIndex":6.621249999999996}]},{"type":"NaturalLanguageTaggedUnit","id":"10000126-u5","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"TextFragmentNode","text":"Maybe perhaps some kind of implicit definition could come to the rescue?\nThanks!"}]},"rawText":"Maybe perhaps some kind of implicit definition could come to the rescue?\nThanks!","source":{"type":"XmlSourceInfo","node":{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"p"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"Maybe perhaps some kind of implicit definition could come to the rescue?\nThanks!"}]}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"rescu":1,"kind":1,"implicit":1,"definit":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"type":"CodeIdentifiersMetaInformation","identifiers":[]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[]},{"type":"TextReadabilityMetaInformation","fleshReadingEaseScore":70.08365384615385,"fleshKincaidGradeLevel":5.098846153846157,"automatedReadingIndex":5.7323076923076925,"gunningFogIndex":5.676923076923078,"smogIndex":6.872983346207417,"colemanLiauIndex":9.487692307692303}]}]},"answers":[{"type":"StackOverflowAnswer","id":10000814,"questionId":10000126,"comments":[],"creationDate":"2012-04-03","lastActivityDate":"2012-04-03","score":7,"isAccepted":true,"owner":{"type":"StackOverflowUser","id":754787,"displayName":"Didier Dupont","reputation":20726},"informationUnits":[{"type":"NaturalLanguageTaggedUnit","id":"10000814-u0","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"TextFragmentNode","text":"Restricting def test[T <: "},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"AnyRef","comments":[]},"comments":[]}],"comments":[]},{"type":"TextFragmentNode","text":"] does the trick. "}]},"rawText":"Restricting def test[T <: AnyRef] does the trick. ","source":{"type":"XmlSourceInfo","node":{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"p"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"Restricting "},{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"def test[T <: AnyRef]"}]},{"type":"XmlTextNode","contents":" does the trick. "}]}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"test":1,"trick":1,"ref":1,"def":1,"restrict":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"AnyRef","comments":[]},"comments":[]}],"comments":[]}],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"type":"CodeIdentifiersMetaInformation","identifiers":[{"type":"IdentifierNode","name":"AnyRef","comments":[]}]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[]},{"type":"TextReadabilityMetaInformation","fleshReadingEaseScore":103.54,"fleshKincaidGradeLevel":0.8049999999999997,"automatedReadingIndex":4.353750000000002,"gunningFogIndex":3.2,"smogIndex":3.0,"colemanLiauIndex":7.691249999999997}]},{"type":"NaturalLanguageTaggedUnit","id":"10000814-u1","astNode":{"type":"HASTNodeSequence","fragments":[{"type":"TextFragmentNode","text":"Rightly so, the generic java method should not accept , e.g., an int[] (Array[Int]) parameter. \nBlah[Int] will be taken as "},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Blah","comments":[]},"typeArguments":{"type":"TypeArgumentsNode","types":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Integer","comments":[]},"comments":[]}],"comments":[]}],"comments":[]},"comments":[]}],"comments":[]},{"type":"TextFragmentNode","text":", Array[Int] is int[], which is not Integer[].  "}]},"rawText":"Rightly so, the generic java method should not accept , e.g., an int[] (Array[Int]) parameter. \nBlah[Int] will be taken as Blah<Integer>, Array[Int] is int[], which is not Integer[].  ","source":{"type":"XmlSourceInfo","node":{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"p"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"Rightly so, the generic java method should not accept , e.g., an "},{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"int[]"}]},{"type":"XmlTextNode","contents":" ("},{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"Array[Int]"}]},{"type":"XmlTextNode","contents":") parameter. \n"},{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"Blah[Int]"}]},{"type":"XmlTextNode","contents":" will be taken as "},{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"Blah<Integer>"}]},{"type":"XmlTextNode","contents":", "},{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"Array[Int]"}]},{"type":"XmlTextNode","contents":" is "},{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"int[]"}]},{"type":"XmlTextNode","contents":", which is not "},{"type":"XmlComposedNode","name":{"type":"XmlNameNode","value":"code"},"attributes":[],"elements":[{"type":"XmlTextNode","contents":"Integer[]"}]},{"type":"XmlTextNode","contents":".  "}]}},"metaInformation":[{"type":"NaturalLanguageMetaInformation","tfMap":{"method":1,"accept":1,"blah":2,"generic":1,"array":2,"paramet":1,"right":1}},{"type":"CodeTypesMetaInformation","qualifiedTypes":[],"simpleTypes":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Blah","comments":[]},"typeArguments":{"type":"TypeArgumentsNode","types":[{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Integer","comments":[]},"comments":[]}],"comments":[]}],"comments":[]},"comments":[]}],"comments":[]},{"type":"ReferenceTypeNode","ids":[{"type":"ParameterizedTypeNode","identifier":{"type":"IdentifierNode","name":"Integer","comments":[]},"comments":[]}],"comments":[]}],"basicTypes":[]},{"type":"CodeInvocationMetaInformation","invocations":[]},{"type":"CodeVariablesMetaInformation","variables":[]},{"type":"CodeIdentifiersMetaInformation","identifiers":[{"type":"IdentifierNode","name":"Blah","comments":[]},{"type":"IdentifierNode","name":"Integer","comments":[]}]},{"type":"CodeMethodDeclaratorsMetaInformation","declarators":[]},{"type":"TextReadabilityMetaInformation","fleshReadingEaseScore":72.61545454545457,"fleshKincaidGradeLevel":5.863636363636363,"automatedReadingIndex":4.194545454545455,"gunningFogIndex":6.218181818181819,"smogIndex":6.872983346207417,"colemanLiauIndex":6.639090909090907}]}]}]}